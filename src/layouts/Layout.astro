---
import Sidebar from "../components/ui/Sidebar.astro";
import Toast from "../components/ui/Toast.astro";
import "../styles/global.css";
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>üè¥‚Äç‚ò†Ô∏è Mis Recursos</title>
		<link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />
		<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

		<script is:inline>
			const setDarkMode = () => {
				if (localStorage.darkMode === 'true' || (!('darkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
					document.documentElement.classList.add('dark')
					localStorage.darkMode = 'true';
				} else {
					document.documentElement.classList.remove('dark')
					localStorage.darkMode = 'false';
				}
			}
	
			setDarkMode();
			// Runs on view transitions navigation
			document.addEventListener('astro:after-swap', setDarkMode);
		</script>

	</head>
	<body>

		<div class="antialiased bg-gray-50 dark:bg-gray-900">

			<Sidebar/>	

				<main class="p-4 md:ml-64 h-auto md:pt-20 min-h-screen">
					<slot />
				</main>

		  </div>
		  <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
		  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

		<script is:inline>
			const cardList = document.getElementById("card-list"); // Obtener la lista de tarjetas
			const searchInput = document.getElementById("search-bar"); // Obtener el campo de b√∫squeda
			const noResultsMessage = document.getElementById("no-results");
		
			searchInput.addEventListener("input", function (event) {
			  const searchTerm = event.target.value.toLowerCase(); // Obtener el t√©rmino de b√∫squeda en min√∫sculas
			  let hasResults = false;
			  
			  // Iterar a trav√©s de las tarjetas y mostrar/ocultar seg√∫n el t√©rmino de b√∫squeda
			  cardList.querySelectorAll(".link-card").forEach((card) => {
				  const title = card
				  .querySelector(".card-title")
				  .textContent.toLowerCase();
				const body = card.querySelector(".card-body").textContent.toLowerCase();
		
				if (title.includes(searchTerm) || body.includes(searchTerm)) {
				  card.style.display = "block";
				  hasResults = true;
				} else {
				  card.style.display = "none";
				}
			  });
			  // Mostrar u ocultar el mensaje de no resultados
			  if (hasResults) {
				noResultsMessage.style.display = "none";
			  } else {
				noResultsMessage.style.display = "block";
			  }
			});
		
		</script>
	</body>
</html>

<style is:global>
	:root {
		--accent: #0598d1;
		--accent-light: #CDEDFA;
		--accent-dark: #1C7DB1;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
	}
</style>